name: Test Installation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'vaitp_auditor/**'
      - 'setup.py'
      - 'pyproject.toml'
      - '.github/workflows/test-build.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'vaitp_auditor/**'
      - 'setup.py'
      - 'pyproject.toml'
      - '.github/workflows/test-build.yml'
  workflow_dispatch:

jobs:
  test-installation-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Test installation
      run: |
        python -m pip install --upgrade pip
        pip install -e .[gui]
        
    - name: Test CLI help
      run: vaitp-auditor --help
      
    - name: Test import
      run: python -c "import vaitp_auditor; print('✓ Package imports successfully')"

  test-installation-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Test installation
      run: |
        python -m pip install --upgrade pip
        pip install -e .[gui]
        
    - name: Test CLI help
      run: vaitp-auditor --help
      
    - name: Test import
      run: python -c "import vaitp_auditor; print('✓ Package imports successfully')"

  test-installation-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgtk-3-dev \
          libglib2.0-dev \
          libcairo2-dev \
          libpango1.0-dev \
          libgdk-pixbuf2.0-dev \
          libatk1.0-dev
        
    - name: Test installation
      run: |
        python -m pip install --upgrade pip
        pip install -e .[gui]
        
    - name: Test CLI help
      run: vaitp-auditor --help
      
    - name: Test import
      run: python -c "import vaitp_auditor; print('✓ Package imports successfully')"

  installation-summary:
    needs: [test-installation-windows, test-installation-macos, test-installation-linux]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Installation Summary
      run: |
        echo "## Multi-Platform Installation Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.test-installation-windows.result }}" == "success" ]; then
          echo "✅ **Windows Installation**: Success" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Windows Installation**: Failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.test-installation-macos.result }}" == "success" ]; then
          echo "✅ **macOS Installation**: Success" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **macOS Installation**: Failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.test-installation-linux.result }}" == "success" ]; then
          echo "✅ **Linux Installation**: Success" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Linux Installation**: Failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Installation Instructions" >> $GITHUB_STEP_SUMMARY
        echo "```bash" >> $GITHUB_STEP_SUMMARY
        echo "git clone https://github.com/netpack/vaitp-auditor.git" >> $GITHUB_STEP_SUMMARY
        echo "cd vaitp-auditor" >> $GITHUB_STEP_SUMMARY
        echo "python -m venv venv" >> $GITHUB_STEP_SUMMARY
        echo "source venv/bin/activate  # On Windows: venv\\Scripts\\activate" >> $GITHUB_STEP_SUMMARY
        echo "pip install -e .[gui]" >> $GITHUB_STEP_SUMMARY
        echo "vaitp-auditor" >> $GITHUB_STEP_SUMMARY
        echo "```" >> $GITHUB_STEP_SUMMARY