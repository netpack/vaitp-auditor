name: Test and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgtk-3-dev \
          libglib2.0-dev \
          libcairo2-dev \
          libpango1.0-dev \
          libgdk-pixbuf2.0-dev \
          libatk1.0-dev \
          xvfb
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[gui]
        pip install pytest pytest-cov
        
    - name: Test installation
      run: |
        vaitp-auditor --help
        python -c "import vaitp_auditor; print('✓ Package imports successfully')"
        
    - name: Run tests
      run: |
        pytest tests/ --cov=vaitp_auditor --cov-report=xml --cov-report=term-missing
        
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  create-release:
    name: Create GitHub release
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Extract version from tag
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
        echo "Release version: $VERSION"
        
        # Determine if this is a pre-release
        if [[ "$VERSION" == *"beta"* ]] || [[ "$VERSION" == *"alpha"* ]] || [[ "$VERSION" == *"rc"* ]]; then
          echo "IS_PRERELEASE=true" >> $GITHUB_ENV
          echo "This is a pre-release"
        else
          echo "IS_PRERELEASE=false" >> $GITHUB_ENV
          echo "This is a stable release"
        fi
        
    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: "VAITP-Auditor v${{ env.RELEASE_VERSION }}"
        body: |
          ## 🚀 VAITP-Auditor v${{ env.RELEASE_VERSION }}
          
          ### 📥 Installation
          
          ```bash
          git clone https://github.com/${{ github.repository }}.git
          cd vaitp-auditor
          python -m venv venv
          source venv/bin/activate  # On Windows: venv\Scripts\activate
          pip install -e .[gui]
          vaitp-auditor
          ```
          
          ### 📋 System Requirements
          
          - **Python**: 3.8+ (3.10+ recommended)
          - **Memory**: 4GB RAM minimum, 8GB recommended
          - **Storage**: 1GB free disk space
          
          ### 🆘 Support
          
          - 📖 [User Guide](https://github.com/${{ github.repository }}/blob/main/docs/GUI_USER_GUIDE.md)
          - 🐛 [Report Issues](https://github.com/${{ github.repository }}/issues)
          - 💬 [Discussions](https://github.com/${{ github.repository }}/discussions)
        prerelease: ${{ env.IS_PRERELEASE }}
        draft: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}